EXAMPLE_GREETING="Hello from .env"
EXAMPLE_ENABLE_LOGS=true

# Gemini API Configuration
GOOGLE_GEMINI_API_KEY="YOUR_GEMINI_API_KEY_HERE"
GOOGLE_GEMINI_MODEL="gemini-pro" # Optional: specify a default model
GOOGLE_GEMINI_IMAGE_RESOLUTION="1024x1024" # Optional: "512x512", "1024x1024", or "1536x1536"
GOOGLE_GEMINI_MAX_IMAGE_SIZE_MB=10 # Optional: Maximum image size in MB
GOOGLE_GEMINI_SUPPORTED_IMAGE_FORMATS='["image/jpeg", "image/png", "image/webp"]' # Optional: JSON array of supported image MIME types
GOOGLE_GEMINI_DEFAULT_THINKING_BUDGET=8192 # Optional: default thinking budget in tokens (0-24576)

# GitHub Configuration
GITHUB_API_TOKEN="YOUR_GITHUB_API_TOKEN_HERE" # Optional: For features requiring GitHub API access

# File System Configuration (SECURITY-SENSITIVE)
# In production environments, always use absolute paths for security reasons

# Base directory for file uploads managed by Gemini tools (e.g. gemini_uploadFile)
# This is primarily used by older Gemini-specific file handling.
GEMINI_SAFE_FILE_BASE_DIR="./output"
# SECURITY NOTE: For production, use an absolute path outside the project directory

# Comma-separated list of allowed output paths for the new file writing tools:
# - mcpCallServerTool (with outputToFile parameter)
# - writeToFileTool
# 
# SECURITY NOTE: This is a critical security feature to prevent unauthorized file writes.
# - If not set, file output will be disabled for these tools (secure default).
# - For production, use absolute paths and avoid overly permissive directories.
# - Ensure these directories exist and have appropriate permissions.
# - NEVER include sensitive system directories like "/", "/etc", "/usr", "/bin", or "/home".
# - Be as specific as possible with your allowed paths.
ALLOWED_OUTPUT_PATHS="./output,/tmp/project_alpha_output"

# MCP Server Configuration (For THIS Server acting as an MCP Server)
# These settings define how this server functions as an MCP server
MCP_SERVER_HOST="localhost" # Host for this server if using network transport like WebSockets
MCP_SERVER_PORT="8080"      # Port for this server if using network transport
                           # Note: Should not conflict with HEALTH_CHECK_PORT if both are enabled
MCP_CONNECTION_TOKEN="your_mcp_connection_token" # Token that clients need to provide when connecting to this server
MCP_CLIENT_ID="gemini-sdk-client-001"           # Default ID used when this server acts as a client to other MCP servers 
                                               # This is used by the mcpCallServerTool, mcpConnectToServerTool, etc.
MCP_LOG_LEVEL="info"        # Optional: "debug", "info", "warn", "error" for server logs
MCP_TRANSPORT="stdio"       # Transport this server uses to communicate with its parent MCP client (e.g., Cline, Claude Desktop)
                           # This is NOT for the new MCP client tools connecting outwards.
                           # Corresponds to MCP_TRANSPORT_TYPE in some contexts.

# Legacy/Deprecated Server Configuration (Use MCP_* variables above instead)
# MCP_TRANSPORT_TYPE="stdio"  # DEPRECATED - Use MCP_TRANSPORT instead
# MCP_WS_PORT="8080"          # DEPRECATED - Use MCP_SERVER_PORT instead

# Health Check Configuration
# ENABLE_HEALTH_CHECK="true"  # Enable a separate HTTP health check endpoint (true/false)
# HEALTH_CHECK_PORT="3000"    # Port for the health check HTTP server